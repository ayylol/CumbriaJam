[gd_resource type="VisualShader" load_steps=10 format=2]

[ext_resource path="res://textures/conveyor_belt_new_basecolor.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]

[sub_resource type="VisualShaderNodeScalarOp" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarOp:6
	float n_in6p1 = 0.00000;
	float n_out6p0 = n_out5p0 + n_in6p1;

// Input:9
	float n_out9p0 = TIME;

// ScalarOp:10
	float n_in10p1 = 0.50000;
	float n_out10p0 = n_out9p0 * n_in10p1;

// ScalarOp:7
	float n_out7p0 = n_out5p1 + n_out10p0;

// VectorCompose:8
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_out6p0, n_out7p0, n_in8p2);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out8p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Output:0
	ALBEDO = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -824.483, 96.2752 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 100, 60 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -500, 100 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -520, 220 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -300, 100 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -300, 240 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -120, 140 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( -640, 360 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -180, 360 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 4, 0, 5, 0, 5, 0, 6, 0, 5, 1, 7, 0, 6, 0, 8, 0, 7, 0, 8, 1, 8, 0, 3, 0, 9, 0, 10, 0, 10, 0, 7, 1 )
